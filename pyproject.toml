[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 42", "versioningit ~= 1.0", "wheel"]

[project]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]

authors = [{name = "Jimmy-Xuan Shen", email = "jmmshn@gmail.com"}]
dependencies = [
  'pymatgen',
  'jobflow',
  'pymatgen-analysis-defects @ git+https://github.com/materialsproject/pymatgen-analysis-defects@js_runs',
  'atomate2 @ git+https://github.com/jmmshn/atomate2@js_runs'
]
dynamic = ["version"]
keywords = ["pymatgen",]
license = {text = "modified BSD"}
name = "run_defects"
readme = "README.md"
requires-python = ">=3.8"

[project.scripts]
restart_fizzled = "run_defects.cli.restart_fizzled:main"

[tool.mypy]
ignore_missing_imports = true
no_strict_optional = true

[tool.ruff]
src = ["src"]
target-version = "py39"
lint.select = ["ALL"]
lint.ignore = [
    "ANN002",
    "ANN003",
    "ANN101",  # missing self type annotation
    "ANN102",
    "ANN401",
    "ARG002",  # unused method argument
    "BLE001",
    "C408",    # Unnecessary (dict/list/tuple) call - remove call
    "C901",    # function too complex
    "COM812",  # trailing comma missing
    "DTZ",     # datetime-tz-now
    "EM",      # exception message must not use f-string literal
    "ERA001",  # found commented out code
    "FBT001",
    "FBT002",
    "FIX002",
    "G004",    # logging uses fstring
    "ISC001",
    "PD011",   # pandas-use-of-dot-values
    "PERF203", # try-except-in-loop
    "PLR",     # pylint-refactor
    "PT004",   # pytest-missing-fixture-name-underscore
    "PT006",   # pytest-parametrize-names-wrong-type
    "PT013",   # pytest-incorrect-pytest-import
    "PTH",     # prefer Pathlib to os.path
    "RUF013",  # implicit-optional
    "S324",    # use of insecure hash function
    "S507",    # paramiko auto trust
    "SLF",     # private member accessed outside class
    "TD",      # TODOs
    "TRY003",  # long message outside exception class
]
lint.pydocstyle.convention = "google"
lint.isort.known-first-party = ["run_defects"]
lint.isort.split-on-trailing-comma = false
lint.extend-safe-fixes = ["TCH"]


